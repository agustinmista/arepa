(module io

  (val main
    (runIO foo)) ;; This could be embedded in the binary's main (runIO main)

  (val foo
    (>> (print_int 10)
    (>> (print_int 20)
        (print_int 30))))

  ;; (con {nil}  {0,0})
  ;; (con {cons} {1,2})

  (fun print_int (n rw)
    (let ((u (__prim_print_int__ n)))
      (seq u ({0,2} u rw))))

  (fun runIO (ioa)
    (case (ioa unit)
      (({0,2} a rw) a)))

  (fun return (x rw)
    ({0,2} x rw))

  (fun >>= (m k rw)
    (case (m rw)
      (({0,2} a rw') (k a rw'))))

  (fun >> (m k)
    (>>= m (lambda (x) k)))

)